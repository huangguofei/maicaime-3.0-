<!-- 购物车 -->
<template>
	<div class="page-layer often-cart-page footer-page">
		<prod-category-list :cartData="cartData" :updateSkuNum="updateSkuNum" v-if="cartData.length"></prod-category-list>
		<footer class="footer" v-if="cartData.length">
			<div class="content">
				<span >合计：</span>
				<span class="price">¥{{cartTotal }}</span>
				<button @click="submitOrders" class="btn">下单</button>
			</div>
		</footer>
		<div class="empty" v-else>
			<p>购物车没有商品！</p>
			<button @click="jumpMarket" class="btn">去市场看看</button>
		</div>
	</div>
</template>
<script>
	import prodCategoryList from "components/often/prod-category-list"
	import catAction from "actionurl/often/cart"
	export default{
		data() {
			return {
				cartData : [],
				prodsPrice : []
			}
		},
		created() {
			var _that = this;
			catAction.getCartList(_that, () => {
				_that.getCartProdPrice();
			});
		},
		computed : {
			cartTotal() {
				var cartData = this.cartData;
				var len = cartData.length, sub = 0;
				if(len > 0) {
					for(var i = 0; i < len; i++) {
						var prods = cartData[i].productBOList;
						var l = prods.length;
						for(var n = 0; n < l; n++) {
							var prod = prods[n];
							sub += prod.skuPrice * prod.skuQuantity;
						}
					}
				}
				if(sub < 0.01) {
					return 0.01;
				}
				return sub.toFixed(2);
			}
		},
		watch : {
			prodsPrice : function(val, oldVal) {
				this.cartData.map((category) => {
					category.productBOList.map((prodItem) => {
						var cartId = prodItem.cartId;
						var prodInfo = val[cartId];
						if(prodInfo) {
							prodItem.skuPrice = prodInfo.skuPrice;
							prodItem.price = prodInfo.originalPrice;
						}
					});
				});
			}
		},
		components : {
			prodCategoryList
		},
		methods : {
			submitOrders() {
				var sub = 0;
				this.cartData.map((items) => {
					var prods = items.productBOList;
					prods.map((item) => {
						sub += item.skuQuantity;
					});
				});
				if(sub) {
					/*this.$router.push({
						name : "often.orders"
					});*/
					window.location.href = "/often/orders/"
				} else {
					cJs.message("购物车没有商品");
				}
				
			},
			updateSkuNum(prod) {
				catAction.cartProdNumUptate(prod);
			},
			jumpMarket() {
				this.$router.push({
					name : "market.index"
				});
			},
			getCartProdPrice() {
				var _that = this;
				setInterval(() => {
					catAction.getCartProdPrice(_that);
				}, 60 * 1000);
				
			}

		}
	}
</script>
<style lang="less">
	@import "../../common/less/config.less";
	.often-cart-page{
		.footer{
			position: fixed;
			left:0;
			bottom:0;
			width:100%;
			z-index:9999;
			.pxrem(height, 98);
			background: #FFF;
			.pxrem(line-height, 98);
			.content{
				.prem(0,20);
				padding:@prem;
			}
			span{
				.pxrem(font-size,28);
			}
			button{
				position: absolute;
				top:0;
				right:0;
				height:100%;
				.pxrem(width, 250);
			}
		}
		.empty{
			position: absolute;
			width:100%;
			left:0;
			top:50%;
			.pxrem(margin-top,-100);
			text-align: center;
			p{
				color:@s-c;
			}
			.btn{
				.pxrem(margin-top,20);
				.pxrem(width, 260);
			}
		}
	}
</style>