<template>
	<article class="order-list">
		<section v-for="(item,key) in orderData">
			<header class="padding" @click="orderDateils">
				<div class="pull-left">
					<img src="../../images/list_order_store.png" />
					<span>{{item.auditRealName}}</span>
				</div>
				<span class="order-status pull-right">{{item.orderStatusText}}</span>
			</header>
			<section class="shop-list padding" @click="orderDateils(item.orderId)">
				<div class="shop-item" v-for="(val,key) in item.products">
					<section class="item-left pull-left">
						<p class="commodity-name"><i></i><span>{{val.prodName}}</span></p>
						<p class="price-num"><span>单价:¥{{val.skuPrice}}</span><span>数量:{{val.actualQuantity}}</span></p>
					</section>
					<section class="item-right pull-right">
						<b>¥{{val.totalAmount}}</b>
					</section>
				</div>
				<p class="remark" v-show="item.skuCount-noShowNum==0">(还有{{item.skuCount-noShowNum}}件食材)</p>
			</section>
			<footer class="padding">
				<p class="pull-left">实付：<span>¥{{item.totalAmount}}</span>
				</p>
				<input type="button" :value="btnStr" class="order-btn pull-right" :class="{'order-btns':isRemark}" />
				<span v-show="isRemark" class='pull-right'>可获得15积分</span>
			</footer>
		</section>
	</article>
</template>

<script>
	export default {
		data() {
			return {
				isRemark: true,
				btnStr: '确认付款'
			}
		},
		props: ['orderData', 'noShowNum'],
		created() {
			console.log(JSON.stringify(this.orderData))
		},
		methods: {
			orderDateils(id) {
				this.$router.push({
					name: "order.detail",
					params: {
						id: id
					}
				})
			}
		}
	}
</script>

<style lang="less" scoped>
	@import "../../common/less/config.less";
	.order-list {
		.pxrem(margin-top, 20);
		header {
			background: #fff;
			.rem(50);
			.pxrem(font-size, 32);
			.pxrem(height, 64);
			.pxrem(line-height, 64);
			img {
				/*.pxrem(width,50);*/
				width: @rem;
				border-radius: @rem/2;
				vertical-align: middle;
			}
			.order-status {
				.pxrem(font-size, 28);
				color: #FF5B60;
			}
		}
		.shop-list {
			.shop-item {
				.pxrem(margin-bottom, 26);
				overflow: auto;
				.item-left {
					.commodity-name {
						color: #151009;
						.pxrem(height, 40);
						.pxrem(line-height, 40);
						.pxrem(font-size, 28);
						.pxrem(margin-bottom, 5);
						i {
							background: @p-p-c;
							display: inline-block;
							.pxrem(width, 12);
							.pxrem(height, 12);
							.pxrem(border-radius, 6);
							.pxrem(margin-right, 6);
						}
					}
					.price-num {
						.pxrem(height, 33);
						.pxrem(line-height, 33);
						color: #999999;
						.pxrem(font-size, 24);
						.pxrem(padding-left, 22);
						span:first-child {
							margin-right: 0.3rem;
						}
					}
				}
				.item-right {
					.pxrem(height, 74);
					.pxrem(line-height, 74);
					b {
						color: #343534;
						.pxrem(font-size, 28);
					}
				}
			}
			.remark {
				color: #343534;
				text-align: center;
				.pxrem(font-size, 24);
			}
		}
		footer {
			.pxrem(height, 64);
			.pxrem(line-height, 64);
			background: #fff;
			.pxrem(font-size, 28);
			p {
				color: #000;
				span {
					color: #FC414E;
				}
			}
			input {
				.pxrem(width, 150);
				.pxrem(height, 58);
				.pxrem(margin-left, 12);
				text-align: center;
				border: 1px solid @m-c;
				.pxrem(font-size, 28);
			}
			.order-btn {
				background: @m-c;
				color: #fff;
			}
			.order-btns {
				background: #fff;
				color: @m-c;
			}
			span {
				color: #222;
			}
		}
	}
</style>