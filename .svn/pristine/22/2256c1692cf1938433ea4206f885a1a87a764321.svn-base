<!-- 市场 -->
<template>
	<div class="page-layer market-index-page">
		<div class="head" ref="head">
			<header class="search-wrap" ref="search">
				<div class="s-content">搜索您想要找的食材</div>
			</header>
			<PRODMENU :categoryData="categoryData" :setSelectInfo="getSelectInfo" ref="prodMenu"></PRODMENU>
		</div>
		<div class="content" ref="content">
			<scroll 
			:pullingDown="true" 
			:pullUpLoad="true"
			 @pullingUp="onPullingUp"
			 ref="scroll"
			 v-if="prodData.length > 0">
				<PRODLIST :prodData="prodData" ></PRODLIST>
			</scroll>
		</div>
		
		<FOOTERNAR :active="2"></FOOTERNAR>
		<cartSuspend ></cartSuspend>
	</div>
</template>
<script>
	import FOOTERNAR from "components/common/footer-nar"
	import PRODMENU from "components/market/prod-menu"
	import PRODLIST from "components/market/prod-list"
	import MARKETACTION from "actionurl/market/market"
	import cartSuspend from "components/common/cart-suspend"
	import scroll from "components/common/scroll"
	export default{
		data() {
			return {
				categoryData : [],
				prodData : [],
				show: true,
				option : {
		          	pageNum : 1,
		          	size : 10,
		          	pages : 1,
		          	total : 0,
		          	categoryId : ""
	            },
			}
		},
		components : {
			PRODMENU,
			FOOTERNAR,
			PRODLIST,
			cartSuspend,
			scroll
		},
		created() {
			MARKETACTION.getCategoryList(this);
		},
		mounted() {
			var footer = document.getElementById("footerWrap");
			if(this.$refs.head && footer) {
				const h = this.$refs.head.getBoundingClientRect().height;
				console.log(h);
				var height = footer.offsetHeight ? footer.offsetHeight : 0;
				this.$refs.content.style.height = (document.body.clientHeight - h - height - 5) + "px";
			}
		},
		methods : {
			getSelectInfo(info) {
				this.option.pageNum = 1;
				this.option.categoryId = info.categoryId;
				if(info.subCategoryId) {
					this.option.subCategoryId = info.subCategoryId
				} else {
					delete this.option.subCategoryId;
				}
				this.prodData = [];
				MARKETACTION.getProdList(this);
			},
			onPullingUp() {
				var _that = this;
				setTimeout(() => {
					MARKETACTION.getProdList(_that, (count) => {
						_that.pullingUpPage(count);
					});
				}, 500);
			},
			pullingUpPage(count) {
				if(count >= 10) {
					this.$refs.scroll.forceUpdate();
				} else {
					setTimeout(() => {
						this.$refs.scroll.forceUpdate(true);
					}, 20);
				}
			}
		}
	}
</script>
<style lang="less" scoped>
	@import "../../common/less/config.less";
	.market-index-page{
		.search-wrap{
			.pxrem(height, 80);
			background: #222222;
			.pxrem(padding-top, 16);
			.s-content{
				.pxrem(height, 58);
				.pxrem(line-height, 58);
				.pxrem(text-indent, 58);
				width:90%;
				margin:auto;
				color:#AAAAAA;
				.pxrem(font-size, 26);
				background: rgba(255, 255, 255, 0.17) url(../../images/home_search.png) no-repeat 5px 4px;
				.prem(40);
				background-size: auto @prem;

			}
		}
		
	}
</style>