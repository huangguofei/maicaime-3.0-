<!-- 食材 -->
<template>
	<div class="page-layer food-index-page">
		<div class="head" ref="head" >
			<header class="header">
				<div class="search-wrap" ref="header">
					<div class="s-content">搜索食材</div>
					<i class="pattern" @click="switchPattern"></i>
				</div>
			</header>
			<PRODMENU :categoryData="categoryData" :setSelectInfo="getSelectInfo" v-if="categoryData.length"></PRODMENU>
		</div>
		<div class="f-con" ref="content">
			<scroll 
				:listenScroll="true"
				:probe-type="probeType"
				 ref="scroll"
				 v-if="prodData.length > 0">
					<PRODLISTPIC v-if="pattern == 2" :categoryProdData="prodData"  :submitEditorPrice="submitEditorPrice"></PRODLISTPIC>
					<PRODLIST v-if="pattern == 1" :categoryProdData="prodData" :submitEditorPrice="submitEditorPrice"></PRODLIST>
			</scroll>
		</div>
		<div class="footer-event" ref="footer">
			<router-link :to="{name : 'food.add'}">
				<button>添加食材</button>
			</router-link>
			
			<!-- <button>食材管理</button> -->
		</div>
		<FOOTERNAR :active="3"></FOOTERNAR>
	</div>
</template>
<script>
	import FOOTERNAR from "components/common/footer-nar"
	import PRODMENU from "components/food/prod-menu"
	import PRODLISTPIC from "components/food/prod-list-pic"
	import PRODLIST from "components/food/prod-list"
	import FOODACTION from "actionurl/food/food"
	import scroll from "components/common/scroll"
	import { mapGetters } from 'vuex'
	export default{
		data() {
			return {
				categoryData : [],
				prodData : [],
				pattern : 1,
				probeType : 3
			}
		},
		components : {
			FOOTERNAR,
			PRODMENU,
			PRODLISTPIC,
			PRODLIST,
			scroll
		},
		computed : {
			...mapGetters({
				categoryList : "getCategoryList"
			})
		},
		created() {
			if(this.categoryList.length > 0) {
				this.categoryData = this.categoryList;
			} else {
				FOODACTION.getCategoryList(this);
			}
		},
		mounted() {
			var _that = this;
			setTimeout(function() {
				var footer = document.getElementById("footerWrap");
				if(_that.$refs.head && footer) {
					const h = _that.$refs.head.getBoundingClientRect().height;
					const f = _that.$refs.footer.getBoundingClientRect().height;
					var height = footer.offsetHeight ? footer.offsetHeight : 0;
					_that.$refs.content.style.height = (document.body.clientHeight - h - f - height) + "px";
				}
			},500);
		},
		methods : {
			getSelectInfo(info) {
				if(info && info.subCategoryId) {
					/*后面做滚动效果*/
				} else {
					var params = {
						categoryId : info.categoryId
					};
					FOODACTION.getProdList(this, params);
				}
			},
			submitEditorPrice(prod) {
				var params = {
					productSkuId : prod.productSkuId,
					price : prod.offerPrice
				};
				FOODACTION.editorProductPrice(this, params);
			},
			switchPattern() {
				this.pattern = this.pattern == 1 ? 2 : 1;
			}
		}
	}
</script>
<style lang="less" scoped>
	@import "../../common/less/config.less";
	.food-index-page{
		.search-wrap{
			.pxrem(height, 80);
			background: #222222;
			.prem(16, 120, 0, 20);
			position: relative;
			padding:@prem;
			.s-content{
				.pxrem(height, 58);
				.pxrem(line-height, 58);
				.pxrem(text-indent, 58);
				color:#AAAAAA;
				.pxrem(font-size, 26);

				background: rgba(255, 255, 255, 0.17) url(../../images/food_search.png) no-repeat 5px 4px;
				.prem(40);
				background-size: auto @prem;
			}
			.pattern{
				display: inline-block;
				position: absolute;
				.pxrem(right,20);
				.pxrem(top,20);
				.pxrem(width, 60);
				.pxrem(height, 48);
				background:url(../../images/food_list.png) no-repeat;
				background-size:auto 100% ;
			}
			.pattern:after{
				content: "";
				position: absolute;
				.pxrem(left, -25);
				.pxrem(top, 10);
				.pxrem(height, 30);
				width:1px;
				background: rgba(255, 255, 255, 0.2);
			}
		}
		.footer-event{
			position: fixed;
			width:100%;
			.pxrem(height,105);
			background: #FFF;
			.pxrem(bottom,97);
			text-align: center;
			button{
				background: @m-c;
				.pxrem(width,194);
				.pxrem(height,60);
				.pxrem(font-size,28);
				color:#FFF;
				border:1px solid @m-c;
				.pxrem(border-radius,100);
				.prem(20);
				margin:@prem;
				box-shadow: 2px 2px 5px rgba(48,132,242,0.59);
			}
		}
	}
</style>
