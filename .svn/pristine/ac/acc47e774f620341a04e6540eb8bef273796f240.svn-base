<template>
	<article class="order-item">
		<section class="search-nav padding bk-white">
			<section class="">
				<a href="javascript:;" @click="changeSearch(1)" :class="{active:searchIndex==1}">数量
					<img v-if="searchIndex!=1" src="../../images/order_arrow.png">
					<img v-else-if="searchIndex==1&&option.sortDirection==0" src="../../images/order_arrowhighlight.png">
					<img v-else-if="searchIndex==1&&option.sortDirection==1" src="../../images/top.png">
				</a>
				<a href="javascript:;" @click="changeSearch(2)" :class="{active:searchIndex==2}">{{searchMode=="order"?"时间":"名称"}}
					<img v-if="searchIndex!=2" src="../../images/order_arrow.png">
					<img v-else-if="searchIndex==2&&option.sortDirection==0" src="../../images/order_arrowhighlight.png">
					<img v-else-if="searchIndex==2&&option.sortDirection==1" src="../../images/top.png"></a>
				<a href="javascript:;" @click="changeSearch(3)" :class="{active:searchIndex==3}">金额
					<img v-if="searchIndex!=3" src="../../images/order_arrow.png">
					<img v-else-if="searchIndex==3&&option.sortDirection==0" src="../../images/order_arrowhighlight.png">
					<img v-else-if="searchIndex==3&&option.sortDirection==1" src="../../images/top.png"></a>
			</section>
			<a href="javascript:;" class="pull-right" @click="changeModel()"><img src="../../images/order_exchange.png">{{searchMode=="order"?"食材模式":"订单模式"}}</a>
		</section>
		<scroll 
			:pullingDown="true" 
			:pullUpLoad="true"
			:height="scrollHeight"
			 @pullingUp="onPullingUp"
			 ref="scroll"
			 v-if="orderList.length > 0">
				<order-list-view :order-data="orderList" v-if="searchMode=='order'"></order-list-view>
				<!--</keep-alive>-->
				<!--<keep-alive>-->
				<food-list-view :order-data="prodList"  v-else="searchMode=='food'"></food-list-view>
		</scroll>
		<footer class="padding">
			<label class="pull-left" :class="{active:isSelectAll}" @click="selectAll">
				<span></span>
				全选
			</label>
			<a href="javscript:;" class="pull-right">打印</a>
		</footer>
	</article>
</template>

<script>
	import orderListView from 'components/order/order-list'
	import foodListView from 'components/order/food-list-view'
	import orderApi from 'actionurl/order/order'
	import scroll from "components/common/scroll"
	export default {
		data() {
			return {
				orderList: [],
				prodList: [],
				searchIndex: 2,
				searchMode: "order",
				isSelectAll: false,
				loadStatus: true,
				orderStatusId: 40,
				pagings : {
		          	current : 1,
		          	size : 10,
		          	pages : 1,
		          	total : 0,
		          	sortDirection: 0,
					sortField: ""
	            },
				option: {
					sortDirection: 0,
					sortField: ""
				},
				scrollHeight : 0,
			}
		},
		components: {
			orderListView,
			foodListView,
			scroll
		},
		created() {
			this.getData();
		},
		mounted() {
			var footer = document.getElementById("footerWrap");
	        if(footer) {
	        	var height = footer.offsetHeight ? footer.offsetHeight : 0;
	        	this.scrollHeight = document.body.clientHeight - height * 4;
	        } else {
	        	this.scrollHeight = 188;
	        }
		},
		watch: {
			orderList(val) {
				//console.log(val)
			}
		},
		methods: {
			changeSearch(index) { /*切换搜索条件*/
				if(this.searchIndex == index) {
					if(this.option.sortDirection == 1)
						this.option.sortDirection = 0;
					else
						this.option.sortDirection = 1;
				} else {
					this.searchIndex = index;
				}
				this.pagings.current = 1;
				this.crearOrderList();
				this.getData();
			},
			selectAll() {
				this.isSelectAll = !this.isSelectAll;
				if(this.isSelectAll)
					this.orderList.forEach((val, key) => {
						val.isSelect = true;
					});

			},
			getSearchData() {
				if(this.searchIndex == 1) { //数量
					this.option.sortField = "skuCount";
				} else if(this.searchIndex == 2) { //时间
					this.option.sortField = "";
				} else { //金额
					this.option.sortField = "totalAmount";
				}
			},
			changeModel() { /*切换显示模式*/
				if(this.searchMode == "order") {
					this.searchMode = "food";
				} else {
					this.searchMode = "order";
				}
				this.isSelectAll = false;
				this.pagings.current = 1;
				this.crearOrderList();
				if(this.orderList.length == 0 || this.prodList.length == 0)
					this.getData();
			},
			getData() {
				this.getSearchData();
				orderApi.getOrderListData(this);
			},
			clickSetInterval() {

			},
			onPullingUp() {
				var _that = this;
				setTimeout(() => {
					orderApi.getOrderListData(_that,(count) => {
						if(count >= _that.pagings.size) {
							_that.$refs.scroll.forceUpdate();
						} else {
							setTimeout(() => {
								_that.$refs.scroll && _that.$refs.scroll.forceUpdate(true);
							}, 20);
						}
						
					});
				}, 500);
			},
			crearOrderList() {
				this.orderList = [];
			}
		}
	}
</script>

<style lang="less" scoped>
	@import "../../common/less/config.less";
	.bk-white {
		background: #fff;
	}
	
	footer {
		position: fixed;
		.pxrem(bottom, 97);
		width: 100%;
		box-sizing: border-box;
		.clearfix();
		background: #fafafa;
		.pxrem(height, 90);
		.pxrem(line-height, 58);
		.pxrem(font-size, 28);
		span {
			display: inline-block;
			.pxrem(width, 32);
			.pxrem(height, 32);
			border: 1px solid #a4a4a4;
			.pxrem(border-radius, 16);
			vertical-align: sub;
		}
		a {
			border: 1px solid @m-c;
			display: inline-block;
			.pxrem(width, 160);
			.pxrem(height, 56);
			color: @m-c;
			text-align: center;
		}
	}
	
	.active {
		span {
			background: url(../../images/order_check.png)no-repeat -1px -1px;
			background-size: 120% auto;
			border-color: #3084F2;
		}
	}
	
	.search-nav {
		text-align: center;
		section {
			display: inline-block;
			width: calc(~"100% - 1.5rem");
			a {
				color: #222222;
				width: 29%;
				background: #eee;
				margin: 0 .05rem;
				img {
					.pxrem(width, 14);
				}
			}
			.active {
				color: @m-c;
			}
		}
		a {
			.pxrem(font-size, 28);
			.pxrem(line-height, 56);
			.pxrem(height, 56);
			display: inline-block;
			width: 1.5rem;
			color: @m-c;
			.pxrem(border-radius, 8);
			img {
				.pxrem(width, 30);
				vertical-align: middle;
			}
		}
	}
</style>