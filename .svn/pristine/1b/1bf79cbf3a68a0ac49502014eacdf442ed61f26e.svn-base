<!-- 充值 -->
<template>
	<div class="recharge-layer">
		<div class="bg"></div>
		<div class="content">
			<div class="con">
				<section>
					<article class="user-conten">
						<h2 class="padding">———— <img src="../../images/user-titles.png"/>优惠充值 ————</h2>
						<p class="price padding">
							<input type="number" v-model="amount" @change="changeAmout" />
						</p>
						<article class="items">
							<section class="padding" :class="selectIndex == key ? 'action':''" v-for="(a, key) in activityList" @click="selectActivity(a, key)">
								<h3>¥{{(a.preconditionAmount * 1).toFixed(2)}}</h3>
								<span>{{a.name}}</span>
							</section>
						</article>
					</article>
					<article class="user-recharge padding" >
						<h4>当前充值金额可获得以下额外优惠：</h4>
						<p v-for="d in discountsList"><i></i>{{d.title}} X {{d.productNumber}}</p>
						<p v-if="!discountsList.length">无</p>
					</article>
				</section>
				<footer>
					<button class="btn btn-confirm">立即充值并支付¥79.00</button>
				</footer>
			</div>
			
		</div>
	</div>
</template>
<script>
	import balanceAction from "actionurl/user/balance"
	export default{
		data() {
			return{
				activityList : [],
				amount : 0,
				specialOfferId: "",
				selectIndex : -1,
				discountsList : [],
			}
		},
		created() {
			balanceAction.getActivityList(this);
		},
		methods : {
			selectActivity(item, key) {
				if(this.selectIndex == key) {
					this.selectIndex = -1;
					this.discountsList = [];
				} else {
					this.selectIndex = key;
					this.discountsList = item.list;
					this.amount = item.preconditionAmount;
				}
				
			},
			submitForm() {
				if(this.amount == 0) {
					cJs.message("充值金额不能为空或0元");
					return false;
				} else if(!cJs.checkPrice(this.amount)) {
					cJs.message("输入正确金额！");
					return false;
				}
				if(this.selectIndex >= 0) {
					var item = this.activityList[this.selectIndex];
					this.specialOfferId = item.specialOfferId;
				} else {
					this.specialOfferId = "";
				}
				//this.payShow = true;
				/*balanceAction.saveRechargeAmount(this);*/
				cJs.isWeiXin() ? commonAction.getWeixinParams(this) : commonAction.getAlipayParams(this);
			},
			changeAmout() {
				var item = this.activityList[this.selectIndex];
				if(this.amount == 0) {
					cJs.message("充值金额不能为空或0元");
					return false;
				} 
				if(this.selectIndex >= 0 && this.amount < item.preconditionAmount) {
					cJs.message("当前充值金额低于充值送券金额，不支持送券!");
					return;
				}
			}
		}
	}
</script>
<style lang="less" scoped>
	@import "../../common/less/config.less";
	.fx{
		position: fixed;
		z-index:999;
		top:0;
		left:0;
		width:100%;
		height: 100%;
	}
	.recharge-layer{
		.fx;
		.bg{
			.fx;
			background: rgba(0, 0, 0, 0.8);
		}
		.content{
			position:absolute;
			z-index:1000;
			width:100%;
			bottom:0;
			.con{
				.prem(20);
				padding:@prem;
			}
			section{
				.prem(20);
				padding:@prem;
				.pxrem(border-radius,16);
				.pxrem(margin-bottom,20);
				background: #FFF;
				h2 {
					text-align: center;
					.pxrem(font-size, 36);
					vertical-align: middle;
					img {
						.pxrem(width, 40);
						.pxrem(margin-right, 10);
						vertical-align: bottom;
					}
				}
				.price {
					width: 90%;
					margin: 0 auto;
					.pxrem(border-radius, 8);
					border: 1px solid #F0F0F0;
					text-align: center;
					input{
						width:100%;
						.pxrem(height, 52);
						.pxrem(font-size, 48);
						border:0;
						text-align: center;
					}
				}
				.items {
					width: 100%;
					margin: .1rem auto;
					text-align: center;
					justify-content: space-between;
					section {
						color: #1EC551;
						position: relative;
						width: 23%;
						margin:2% 1%;
						float: left;
						.pxrem(border-radius, 8);
						border: 1px solid #F0F0F0;
						overflow: hidden;
						p {
							.pxrem(font-size, 56);
						}
						span {
							.pxrem(font-size, 22);
						}
						i {
							display: none;
							position: absolute;
							.pxrem(top, -15);
							.pxrem(right, -60);
							.pxrem(font-size, 20);
							.pxrem(width, 150);
							.pxrem(height, 60);
							.pxrem(line-height, 80);
							color: #fff;
							transform: rotate(45deg);
							font-style: initial;
							background: #FF5B60;
						}
					}
					&:after{
						.clearFloat;
					}
				}
				.user-recharge {
					position: relative;
					background: #fff;
					border-top: 1px dashed #D7D7D7;
					.pxrem(border-bottom-left-radius, 16);
					.pxrem(border-bottom-right-radius, 16);
					h4 {
						.pxrem(font-size, 32);
						.pxrem(margin-bottom, 16);
					}
					p {
						.pxrem(font-size, 28);
						color: #666;
						.pxrem(margin-bottom, 10);
						i {
							display: inline-block;
							.pxrem(width, 12);
							.pxrem(height, 12);
							background: #1EC551;
							.pxrem(border-radius, 6);
							.pxrem(margin-right, 10);
						}
					}
					&:before{
						position: absolute;
						content: "";
						.pxrem(top, -20);
						.pxrem(left, -40);
						.pxrem(width,30);
						.pxrem(height,30);
						border-radius:50%;
					}
				}
				.action {
					background: #1EC551;
					color: #fff!important;
					i {
						display: block!important;
					}
				}
			}
			footer{
				.btn-confirm{
					width:100%;
					.pxrem(height, 88);
					.pxrem(line-height, 88);
					.pxrem(border-radius,8);
					.pxrem(font-size,32);
				}
			}
		}
	}
</style>