<!-- 活动列表 -->
<template>
	<page-layer :narData="narData">
		<el-row class="back-color padding">
			<el-col :span="2">
				<el-button type="success" @click="handle('new')">添加</el-button>
			</el-col>
		</el-row>
		<el-table :data="tableData" style="width: 100%;">
			<el-table-column prop="orderIndex" label="搜索量" width="80">
			</el-table-column>
			<el-table-column prop="keywordName" label="关键字">
			</el-table-column>
			<el-table-column prop="timeCreated" label="创建时间">
			</el-table-column>
			<el-table-column width="200" label="操作">
				<template scope="scope">
					<el-button @click="handle('edit',scope.row)">编辑</el-button>
					<el-button class="el-button-del" @click="deleteSearch(scope.row)">删除</el-button>
				</template>
			</el-table-column>
		</el-table>
		<!-- <el-pagination
		      @current-change="handleCurrentChange"
		      :current-page.sync="pagings.current"
		      :page-size="pagings.size"
		      layout="total, prev, pager, next"
		      :total="pagings.total">
	    </el-pagination> -->
		<edit-dialog :editDialogInfo="editDialogInfo" @submitEdit="postEdit" ref="editDialog"></edit-dialog>
	</page-layer>
</template>
<script>
	import pageLayer from "components/common/page-layer"
	import requestServer from "action/marketing/search"
	import editDialog from "components/marketing/editor/edit-search"
	export default {
		data() {
			return {
				tableData: [],
				pagings: {
					current: 1,
					size: 20,
					pages: 1,
					total: 0
				},
				narData: [{
					name: "热门搜索"
				}],
				editDialogInfo: {
					title: "新建",
					showDialog: false,
					editData: ""
				}
			}
		},
		created: function() {
			requestServer.getSearchList(this);
		},
		components: {
			pageLayer,
			editDialog
		},
		methods: {
			handleCurrentChange(value) {
				this.pagings.current = value;
				requestServer.getSearchList(this);
			},
			handle(status, data) {
				if(status == "new") {
					this.editDialogInfo.title = "新增";
					this.$refs.editDialog.watchData('new', data);
				} else {
					this.editDialogInfo.title = "编辑";
					this.editDialogInfo.editData = data;
					this.$refs.editDialog.watchData('edit', data);
				}
				this.editDialogInfo.showDialog = true;
			},
			postEdit(val) {
				console.log(arguments)
				requestServer.searchHandle(this, val[0], val[1]);
			},
			deleteSearch(data) {
				this.$confirm('确认删除该搜索词?', '提示', {
					confirmButtonText: '确定',
					cancelButtonText: '取消',
					type: 'warning'
				}).then(() => {
					requestServer.searchDelete(this, data.keywordId);
				}).catch(() => {
					this.$message({
						type: 'info',
						message: '已取消删除'
					});
				});
			}
		}
	}
</script>
<style lang="less" scoped>
	@import "../../../common/less/config.less";
</style>