<!-- 账单  信息 -->
<template>
	<page-layer :narData="narData" classs="back-color">
		<el-form :inline="true" ref="form" :model="queryParams" label-width="80px" style='padding-top: 10px;'>
			<el-form-item label="服务站">
				<el-select v-model="queryParams.agentId" clearable placeholder="服务站" size="small" :disabled="isSelect">
					<el-option v-for="item in agentList" :key="item.agentId" :label="item.agentName" :value="item.agentId">
					</el-option>
				</el-select>
			</el-form-item>
			<el-form-item label="商户类型">
				<el-select v-model="queryParams.merchantTypeId" placeholder="商户类型" size="small">
					<el-option v-for="item in shopType" :key="item.value" :label="item.name" :value="item.value">
					</el-option>
				</el-select>
			</el-form-item>
			<el-form-item label="结算状态">
				<el-select v-model="queryParams.status" placeholder="结算状态" size="small">
					<el-option v-for="item in statusType" :key="item.value" :label="item.name" :value="item.value">
					</el-option>
				</el-select>
			</el-form-item>
			<el-form-item label="查询时间">
				<el-date-picker v-model="searchDate" format="yyyy-MM-dd HH:mm" size="small" @change="changeTime" type="datetimerange" unlink-panels :picker-options="pickerOptions" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期" align="right">
				</el-date-picker>
			</el-form-item>
			<el-form-item label="关键字">
				<el-input v-model="queryParams.keyword" size="small"></el-input>
			</el-form-item>
			<el-form-item>
				<el-button type="primary" style="margin-left:20px;" @click="queryInfo()" size="small">查询</el-button>
			</el-form-item>
			<el-tooltip class="item" effect="dark" content="会根据您设置的条件过滤导出Excel" placement="top-start">
		      <el-button size="small" style="margin:0 0 5px 20px" @click="downloadExcel">导出</el-button>
		    </el-tooltip>
		</el-form>
		<el-table :data="tableDatas" style="width: 100%">
			<el-table-column type="index" width="60">
			</el-table-column>
			<el-table-column prop="billId" label="账单号" width="190">
			</el-table-column>
			<el-table-column label="商户信息" width="300">
				<template scope="scope">
					<p>{{scope.row.merchantName }}</p>
					<p>{{scope.row.merchantMobile }}</p>
				</template>
			</el-table-column>
			<el-table-column prop="startDate" label="开始时间" width="180">
			</el-table-column>
			<el-table-column prop="endDate" label="结束时间" width="180">
			</el-table-column>
			<el-table-column prop="settlementStatusText" label="状态">
			</el-table-column>
			<el-table-column label="总金额">
				<template scope="scope">
					<p class="price" :class="{active:scope.row.totalAmount>0}">{{scope.row.totalAmount>0?"+"+scope.row.totalAmount:scope.row.totalAmount|ms}}</p>
				</template>
			</el-table-column>
			<el-table-column prop="timeCreated" label="创建时间" width="180">
			</el-table-column>
			<el-table-column label="操作" width="150" fixed="right">
				<template scope="scope">
					<a :href="'/bill/list/'+scope.row.billId+'?type='+scope.row.merchantTypeId" target="_blank"><el-button>查看账单详情</el-button></a>
					<!--<el-button type="" class="btn" @click="viewDetails(scope.row)">查看订单详情</el-button>-->
				</template>
			</el-table-column>

		</el-table>
		<div class="total">
			<span class="item">未结算总计：{{totalData.notSettledamount}}</span>
			<span class="item">已结算总计：{{totalData.settledAmount}}</span>
		</div>
		<pagination :pagings="queryParams" :totalCount="totalCount" @changePageSize="changePageSize"></pagination>
	</page-layer>
</template>
<script>
	import billAction from "actionurl/data/bill"
	import pageLayer from "components/common/page-layer"
	import pagination from "components/common/pagination"
	import agrntServer from "actionurl/serve/agent"
	export default {
		data() {
			return {
				narData: [{
					name: "账单记录",
					router: ""
				}],
				searchDate: '',
				totalData: "",
				queryParams: {
					agentId:'',
					merchantTypeId: 300,
					status: "",
					beginDate: "",
					endDate: "",
					keyword: "",
					billId: "",
					pageSize: 10,
					pageNum: 1,
				},
				tableDatas: [],
				agentList:[],
				isSelect:true,
				totalCount: 0,
				shopType: [{
					name: '供应商',
					value: 300
				}, {
					name: '驿站',
					value: 600
				}, {
					name: '配送商',
					value: 700
				}],
				statusType: [{
					name: '选择结算状态',
					value: ""
				}, {
					name: '未结算',
					value: "0"
				}, {
					name: '已结算',
					value: "1"
				}],
				pickerOptions: {
					shortcuts: [{
						text: '最近一周',
						onClick(picker) {
							const end = new Date();
							const start = new Date();
							start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
							picker.$emit('pick', [start, end]);
						}
					}, {
						text: '最近一个月',
						onClick(picker) {
							const end = new Date();
							const start = new Date();
							start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
							picker.$emit('pick', [start, end]);
						}
					}, {
						text: '最近三个月',
						onClick(picker) {
							const end = new Date();
							const start = new Date();
							start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
							picker.$emit('pick', [start, end]);
						}
					}]
				}
			}
		},
		created() {
			billAction.getcheckList(this);
			agrntServer.getSiteList(this, {
				pageSize: 50
			});
		},
		components: {
			pageLayer,
			pagination
		},
		methods: {
			queryInfo() {
				billAction.getcheckList(this);
			},
			changePageSize() {
				billAction.getcheckList(this);
			},
			viewDetails(data) {
				this.$router.push({
					name: "data.bill.details",
					params: {
						id: data.billId
					}
				})
			},
			changeTime(val) {
				if(val) {
					this.queryParams.beginDate = val.split("至")[0];
					this.queryParams.endDate = val.split("至")[1];
				} else {
					this.queryParams.beginDate = "";
					this.queryParams.endDate = "";
					return "";
				}
			},
			downloadExcel() {
				var params = "", query = this.queryParams;
				for(var k in query) {
					if(query[k] && k != "pageSize" && k != "pageNum")
						params += "&" + k + "=" +query[k];
				}
				var info = cJs.getCookie("MCM_AGENT_USER_INFO");
				if(info) {
					info = JSON.parse(info);
					window.location.href = "/operation/admin/bill/export-bill-list?token=" + info.token + params;
				}
			}
		}
	}
</script>
<style lang="less" scoped>
	@import "../../../common/less/config.less";
	.price {
		color: red;
	}
	
	.active {
		color: #46CD72;
	}
	
	.total {
		height: 45px;
		line-height: 45px;
		border-bottom: 1px solid #DFDFDF;
		text-indent: 1rem;
		margin: 5px 0;
		font-size: 18px;
		.item {
			margin-right: 20px;
		}
	}
</style>